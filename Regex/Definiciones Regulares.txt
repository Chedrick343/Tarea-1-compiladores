<gpa> ::= "4.0" | <leading> "." <trailing>
<leading> ::= [0-3]
<trailing> ::= [0-9]
<digitoCero> ::= [0-9]
<digito> ::= [1-9]
<simboloMenos> ::= "-"
<cero> ::= "0" 
<definicionEntero> ::= <cero> | <simboloMenos>? <digito> <digitoCero>*
<definicionNatural> ::= <digito> <digitoCero>*
<punto> ::= "."
<definicionFlotante> ::= <definicionEntero> <punto> <definicionNatural> | <cero> <punto> <cero> | <simboloMenos>? <cero> <punto> <cero>* <definicionNatural>+ | <definicionEntero> <punto> <cero>* <definicionNatural>

<comentario> ::= <comentarioUnaLinea> | <comentarioMultiLinea>

<comentarioUnaLinea> ::= "|" (<letra> | <digitoCero> | <expresionesASCII> | <espacios>)* <cambioLinea>?

<comentarioMultiLinea> ::= "adm" (<letra> | <digitoCero> | <expresionesASCII> | <espacios> | <cambioLinea>)* "!"

<letra> ::= [a-z] | [A-Z]
<oracion> ::= <letra>+
<simboloGuionBajo> ::= "_"
<identificador> ::= <simboloGuionBajo>? (<oracion> | <digitoCero> | <simboloGuionBajo>)+
<espacio> ::= " " | "\t"
<espacios> ::= <espacio> | <espacio> <espacios>
<cambioLinea> ::= "\n"
<cambios> ::= <cambioLinea> | <cambioLinea> <cambios>

<comilla> ::= "\""
<cadena> ::= <comilla> (<oracion> | <digitoCero> | <simboloGuionBajo> | <punto> | <simboloMenos> | <espacios>)* <comilla>
<palabraReservadaTrue> ::= "True"
<palabraReservadaFalse> ::= "False"

<palabraReservadaTipoEntero> ::= "int"
<palabraReservadaTipoString> ::= "String"
<palabraReservadaTipoFlotante> ::= "float"
<palabraReservadaTipoBooleano> ::= "boolean"
<palabraReservadaLet> ::= "let"
<simboloIgual> ::= "="
<definicionChar> ::= <comillaSimple> (<letra> | <expresionesASCII> | <digitoCero>) <comillaSimple>
<finalExpresion> ::= "$"
<palabraReservadaTipoChar> ::= "char"
<nonPrintable> ::= "<NUL>" | "<SOH>" | "<STX>" | "<ETX>" | "<EOT>" 
                 | "<ENQ>" | "<ACK>" | "<BEL>" | "<BS>"  | "<TAB>" 
                 | "<LF>"  | "<VT>"  | "<FF>"  | "<CR>"  | "<SO>" 
                 | "<SI>"  | "<DLE>" | "<DC1>" | "<DC2>" | "<DC3>" 
                 | "<DC4>" | "<NAK>" | "<SYN>" | "<ETB>" | "<CAN>" 
                 | "<EM>"  | "<SUB>" | "<ESC>" | "<FS>"  | "<GS>" 
                 | "<RS>"  | "<US>"  | "<DEL>"

<expresionesASCII> ::= <nonPrintable>
                     | " " | "!" | "\"" | "#" | "$" | "%" | "&" | "(" | ")" 
                     | "*" | "+" | "," | "-" | "." | "/" 
                     | ":" | ";" | "<" | "=" | ">" | "?" 
                     | "@" 
                     | "[" | "\\" | "]" | "^" | "_" | "`" 
                     | "{" | "|" | "}" | "~"
 
<comillaSimple> ::= "'"
<definicionString> ::= <comilla> (<letra> | <expresionesASCII> | <digitoCero>)* <comilla>
<declaracionEntero> ::= <palabraReservadaLet> <espacios> <palabraReservadaTipoEntero> <espacios> <identificador> (<espacios>? <simboloIgual> <espacios>? <definicionEntero>)? <finalExpresion>
<declaracionFlotante> ::= <palabraReservadaLet> <espacios> <palabraReservadaTipoFlotante> <espacios> <identificador> (<espacios>? <simboloIgual> <espacios>? <definicionFlotante>)? <finalExpresion>
<declaracionBooleano> ::= <palabraReservadaLet> <espacios> <palabraReservadaTipoBooleano> <espacios> <identificador> (<espacios>? <simboloIgual> <espacios>? (<palabraReservadaTrue> | <palabraReservadaFalse>))? <finalExpresion>
<declaracionCaracter> ::= <palabraReservadaLet> <espacios> <palabraReservadaTipoChar> <espacios> <identificador> (<espacios>? <simboloIgual> <espacios>? <comillaSimple> (<letra> | <expresionesASCII> | <digitoCero>) <comillaSimple>)? <finalExpresion>
<declaracionString> ::= <palabraReservadaLet> <espacios> <palabraReservadaTipoString> <espacios> <identificador> (<espacios>? <simboloIgual> <espacios>? <definicionString>)? <finalExpresion>  

<abreCorchete> ::= "["
<cierraCorchete> ::= "]"
<declaracionArregloEntero> ::= <palabraReservadaLet> <espacios> <palabraReservadaTipoEntero> <abreCorchete> <definicionNatural> <cierraCorchete> <espacios> <identificador> <finalExpresion>
<declaracionArregloChar> ::= <palabraReservadaLet> <espacios> <palabraReservadaTipoChar> <abreCorchete> <definicionNatural> <cierraCorchete> <espacios> <identificador> <finalExpresion>
<asignacionArreglo> ::= <espacios>? <simboloIgual> <espacios>? (<definicionChar> | <definicionEntero> | <identificador>)
<obtenerAsignarElementoArreglo> ::= <identificador> <abreCorchete> <definicionNatural> <cierraCorchete> (<asignacionArreglo>)? <espacios>?


<tipo> ::= <palabraReservadaTipoBooleano>   | <palabraReservadaTipoChar> 
            | <palabraReservadaTipoEntero>  | <palabraReservadaTipoFlotante> 
            | <palabraReservadaTipoString>

<abrirParentesis> ::= "("
<cerrarParentesis> ::= ")"

<parametros> ::= <parametro> | (<parametro> <espacios>? "," <espacios>? <parametros>)

<parametro> ::= <declaracion>

<listaParametros> ::= <parametros> | E

<abrirBloque> ::= "("
<cerrarBloque> ::= ")"

<retorno> ::= "return" <espacios>? <expresion>?

<listaSentencias> ::= <sentencias> | E

<sentencias> ::= (<sentencia> | <comentario>) | (<sentencia> | <comentario>) <espacios>? <cambios>? <espacios>? <sentencias>

<sentencia> ::= (<creacion> 
                | <asignacion> 
                | <obtenerAsignarElementoArreglo> 
                | <condicional> 
                | <bucle>
                | <bloqueFor>
                | "break" 
                | <retorno>
                ) <finalExpresion>

<expresion> ::= <termino> ( <espacios>? ("+" | "-") <espacios>? <termino> )*

<termino>   ::= <factor> ( <espacios>? ("*" | "/" | "//") <espacios>? <factor> )*

<factor>    ::= <operacion>
              | <abrirParentesis> <expresion> <cerrarParentesis>

<operacion> ::= <definicionEntero>
              | <definicionFlotante>
              | <palabraReservadaTrue>
              | <palabraReservadaFalse>
              | <definicionChar>
              | <identificadorFuncion>
              | <cadena>
              | <identificador>
              | <palabraReservadaLet> <espacios> <tipo> <abreCorchete> <definicionNatural> <cierraCorchete> <espacios> <identificador> <finalExpresion>

<declaracion> ::= <tipo> <espacios> <identificador>

<creacion> ::= <palabraReservadaLet> <espacios> <declaracion>
               (<espacios>? <simboloIgual> <espacios>? <expresion>)?

<asignacion> ::= <identificador> <espacios>? <simboloIgual> <espacios>? <expresion>

<condicional> ::= "decide of" <espacios>? <cambios>?
                  (<espacios>? <abrirParentesis> <espacios>? <expresionRelacional> <espacios>? <cerrarParentesis> <espacios>? "->" <espacios>? <cambios>? <espacios>? <bloque> <espacios>? <cambios>?)+
                  (<espacios>? "else" <espacios>? "->" <espacios>? <bloque> <cambios>?)?
                  <espacios>? "end decide"

<operadorRelacional> ::= "<" | "<=" | ">" | ">=" | "==" | "!="

<expresionRelacional> ::= <expresionNumerica> <espacios>? <operadorRelacional> <espacios>? <expresionNumerica>
                        | <expresionBooleana> <espacios>? ("==" | "!=") <espacios>? <expresionBooleana>

<expresionNumerica> ::= <definicionEntero>
                      | <definicionFlotante>
                      | <identificador>
                      | <operacion>

<expresionBooleana> ::= <palabraReservadaTrue>
                      | <palabraReservadaFalse>
                      | <identificador>

<bucle> ::= "loop" <espacios>? <cambios>? <espacios>? <sentencias> <espacios>? <cambios>? <espacios>?
            "exit when" <espacios>? <abrirParentesis>? <espacios>? <expresionRelacional> <espacios>? <cerrarParentesis>? <finalExpresion> <espacios>? <cambios>? 
            "end loop"

<bloque> ::= <abrirBloque> <cambios>? <espacios>? <cambios>? <listaSentencias> <cambios>? <espacios>? <cambios>? <cerrarBloque>

<bloqueFor> ::= "for" <espacios>? <abrirParentesis>? <espacios>? <asignacion> <espacios>? <cerrarParentesis>? <espacios>?
                "step" <espacios>? <definicionNatural> <espacios>? ( "to" | "downto" ) <espacios>?
                <expresion> <espacios>? "do" <espacios>? <cambios>? <bloque>

<identificadorFuncion> ::= <identificador> <espacios>? <abrirParentesis> <espacios>? <listaParametros> <espacios>? <cerrarParentesis>

<funcion> ::= (<tipo> | "void") <espacios> <identificadorFuncion> <espacios>? <cambioLinea>?
              <bloque>

<listaFunciones> ::= <funcion> | <funcion> <espacios>? <cambios>? <listaFunciones> | E

<main> ::= "void" <espacios>? "main" <abrirParentesis> <cerrarParentesis> <espacios>? <finalExpresion>? <cambios>? <bloque>

<program> ::= <listaFunciones> <main> <listaFunciones> 
